import QtQuick
import QtQuick.Window
import QtQuick.Controls
import QtQuick.Layouts
import QtQuick3D
import QtQuick.Dialogs
import QtQuick3D.Helpers
import QtQuick3D.AssetUtils
import Qt.labs.platform
import QtCore

Rectangle {
    id: root

    // –ü—É–±–ª–∏—á–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
    property var cameraHelper
    property var gridManager
    property var boneManipulator
    property var keyframeManager

    color: "#80000000"
    height: 50
    z: 10 // –ü–∞–Ω–µ–ª—å –ø–æ–≤–µ—Ä—Ö –≤—Å–µ–≥–æ

    // –°–∏–≥–Ω–∞–ª—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫–Ω–æ–ø–æ–∫
    signal orbitModeRequested()
    signal wasdModeRequested()
    signal resetViewRequested()
    signal toggleGridRequested()
    signal importModelRequested()
    signal toggleSkeletonRequested()
    signal toggleBoneManipulationRequested()
    signal exportKeyframesRequested()
    signal exportAnimationRequested()

    RowLayout {
        anchors {
            fill: parent
            margins: 5
        }
        spacing: 10

        Button {
            id: orbitButton
            text: "–†–µ–∂–∏–º Orbit"
            Layout.preferredWidth: 120
            background: Rectangle {
                color: cameraHelper.orbitControllerEnabled ? "#007acc" : "#444444"
                radius: 4
            }
            contentItem: Text {
                text: orbitButton.text
                color: "white"
                horizontalAlignment: Text.AlignHCenter
                verticalAlignment: Text.AlignVCenter
            }
            onClicked: orbitModeRequested()
            ToolTip.visible: hovered
            ToolTip.text: "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —Ä–µ–∂–∏–º Orbit –∫–∞–º–µ—Ä—ã"
        }

        Button {
            id: wasdButton
            text: "–†–µ–∂–∏–º WASD"
            Layout.preferredWidth: 120
            background: Rectangle {
                color: !cameraHelper.orbitControllerEnabled ? "#007acc" : "#444444"
                radius: 4
            }
            contentItem: Text {
                text: wasdButton.text
                color: "white"
                horizontalAlignment: Text.AlignHCenter
                verticalAlignment: Text.AlignVCenter
            }
            onClicked: wasdModeRequested()
            ToolTip.visible: hovered
            ToolTip.text: "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —Ä–µ–∂–∏–º WASD –∫–∞–º–µ—Ä—ã"
        }

        Button {
            text: "–°–±—Ä–æ—Å –≤–∏–¥–∞"
            Layout.preferredWidth: 120
            onClicked: resetViewRequested()
            ToolTip.visible: hovered
            ToolTip.text: "–°–±—Ä–æ—Å–∏—Ç—å –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã"
        }

        Button {
            id: gridButton
            property bool gridState: gridManager.gridEnabled
            text: gridState ? "–°–∫—Ä—ã—Ç—å —Å–µ—Ç–∫—É" : "–ü–æ–∫–∞–∑–∞—Ç—å —Å–µ—Ç–∫—É"
            Layout.preferredWidth: 120
            onClicked: {
                toggleGridRequested()
                gridState = gridManager.gridEnabled
            }
            ToolTip.visible: hovered
            ToolTip.text: "–ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é —Å–µ—Ç–∫—É"
        }

        Button {
            text: "–ó–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å"
            Layout.preferredWidth: 120
            onClicked: importModelRequested()
            ToolTip.visible: hovered
            ToolTip.text: "–ó–∞–≥—Ä—É–∑–∏—Ç—å 3D –º–æ–¥–µ–ª—å (glTF, GLB)"
        }

        Button {
            text: "Skeleton Analysis"
            Layout.preferredWidth: 120
            onClicked: toggleSkeletonRequested()
            ToolTip.visible: hovered
            ToolTip.text: "–û—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ –∞–Ω–∞–ª–∏–∑–∞ —Å–∫–µ–ª–µ—Ç–∞"
        }

        Button {
            id: boneManipulationButton
            text: "ü¶¥ Bone Control"
            Layout.preferredWidth: 120
            background: Rectangle {
                color: (boneManipulator && boneManipulator.manipulationEnabled) ? "#007acc" : "#444444"
                radius: 4
            }
            contentItem: Text {
                text: boneManipulationButton.text
                color: "white"
                horizontalAlignment: Text.AlignHCenter
                verticalAlignment: Text.AlignVCenter
            }
            onClicked: toggleBoneManipulationRequested()
            ToolTip.visible: hovered
            ToolTip.text: "–û—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—Å—Ç—è–º–∏"
        }

        Button {
            text: "üíæ Export Keyframes"
            Layout.preferredWidth: 140
            onClicked: exportKeyframesRequested()
            ToolTip.visible: hovered
            ToolTip.text: "–≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –∫–ª—é—á–µ–≤—ã—Ö –∫–∞–¥—Ä–æ–≤ –≤ –∫–æ–Ω—Å–æ–ª—å"
        }

        Button {
            text: "üé¨ Export Animation"
            Layout.preferredWidth: 140
            background: Rectangle {
                color: parent.pressed ? "#5a4d2d" : "#8b7a34"
                border.color: "#777777"
                radius: 4
            }
            contentItem: Text {
                text: parent.text
                color: "white"
                horizontalAlignment: Text.AlignHCenter
                verticalAlignment: Text.AlignVCenter
                font.bold: true
            }
            onClicked: exportAnimationRequested()
            ToolTip.visible: hovered
            ToolTip.text: "–≠–∫—Å–ø–æ—Ä—Ç –∞–Ω–∏–º–∞—Ü–∏–∏ –≤ –≤–∏–¥–µ–æ —Ñ–∞–π–ª"
        }

        Item { Layout.fillWidth: true } // –†–∞—Å—à–∏—Ä–∏—Ç–µ–ª—å

        // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è (–£–î–ê–õ–ï–ù —Å—á–µ—Ç—á–∏–∫ –∫–ª—é—á–µ–≤—ã—Ö –∫–∞–¥—Ä–æ–≤)
        Column {
            Layout.alignment: Qt.AlignRight
            spacing: 2

            Label {
                text: cameraHelper.orbitControllerEnabled ? "–†–µ–∂–∏–º: Orbit" : "–†–µ–∂–∏–º: WASD"
                color: "white"
                font.pixelSize: 12
                horizontalAlignment: Text.AlignRight
            }

            Label {
                text: (boneManipulator && boneManipulator.manipulationEnabled) ?
                      "ü¶¥ Bone Control: ON" :
                      "ü¶¥ Bone Control: OFF"
                color: (boneManipulator && boneManipulator.manipulationEnabled) ? "#00ff00" : "#888888"
                font.pixelSize: 10
                horizontalAlignment: Text.AlignRight
            }
        }
    }
}
